#!/opt/local/bin/perl

# Project Euler Problem #45
#
# Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
# Triangle 	  	T(n)=n(n+1)/2 	  	1, 3, 6, 10, 15, ...
# Pentagonal 	  	P(n)=n(3n-1)/2 	  	1, 5, 12, 22, 35, ...
# Hexagonal 	  	H(n)=n(2n-1) 	  	1, 6, 15, 28, 45, ...
# 
# It can be verified that T(285) = P(165) = H(143) = 40755.
# 
# Find the next triangle number that is also pentagonal and hexagonal.
# 
use strict;
use warnings;
require "/Users/don/bin/scripts/euler/functions.pm";

# Disable output buffering
select((select(STDOUT), $|=1)[0]);

startTiming();
my $answer = '';
my $max = 1000000;
my %tri_memo;
my %pent_memo;
my %hex_memo;
my $largest = 0;
my $tri_num;
my $pent_num;
my $hex_num;


dbgMsg("Calculating tri, pent, and hex numbers for values under $max...\n");

for (my $n = 1; $n < $max; $n++) {
  $tri_num = triNum($n);
  $pent_num = pentNum($n);
  $hex_num = hexNum($n);
  
  $tri_memo{$tri_num} = $n;
  $pent_memo{$pent_num} = $n;
  $hex_memo{$hex_num} = $n;
  if ($n % 30000 == 0) { tick("Checking $n"); }
  my $large_check = max($tri_num, $pent_num, $hex_num);
  if ($large_check > $largest) {
    $largest = $large_check;
  }
}

dbgMsg("...done\n");
dbgMsg("Seeking matches between 40756 and $largest...\n");

for (my $n = 40756; $n < $largest; $n++) {
  if (defined $tri_memo{$n} && defined $pent_memo{$n} && defined $hex_memo{$n}) {
    $answer = $n;
    last;
  }
  if ($n % 30000 == 0) { tick("Checking $n"); }
}


print "\n\nAnswer: $answer\n\n";

endTiming();


# Answer: 1533776805